# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='config.proto',
  package='stock_testing',
  syntax='proto3',
  serialized_options=_b('\n\026com.chi.ssetest.protosB\013SetupConfig'),
  serialized_pb=_b('\n\x0c\x63onfig.proto\x12\rstock_testing\"\xb0\x01\n\tSDKConfig\x12\x0e\n\x06\x61ppKey\x18\x01 \x01(\t\x12/\n\x08sdkLevel\x18\x02 \x01(\x0e\x32\x1d.stock_testing.SDKPermissions\x12\x32\n\x0bsdkSseLevel\x18\x03 \x01(\x0e\x32\x1d.stock_testing.SDKPermissions\x12.\n\x07hkPerms\x18\x04 \x03(\x0e\x32\x1d.stock_testing.SDKPermissions\"j\n\x0eTestcaseConfig\x12\x12\n\ntestcaseID\x18\x01 \x01(\t\x12\x16\n\x0e\x65xecutionTimes\x18\x02 \x01(\x05\x12\x1a\n\x12\x63ontinueWhenFailed\x18\x03 \x01(\x08\x12\x10\n\x08paramStr\x18\x04 \x01(\t\"\x90\x01\n\x0cRunnerConfig\x12\r\n\x05jobID\x18\x01 \x01(\t\x12\x10\n\x08runnerID\x18\x02 \x01(\t\x12+\n\tsdkConfig\x18\x03 \x01(\x0b\x32\x18.stock_testing.SDKConfig\x12\x32\n\x0b\x63\x61sesConfig\x18\x04 \x03(\x0b\x32\x1d.stock_testing.TestcaseConfig*t\n\x0eSDKPermissions\x12\x0b\n\x07LEVEL_1\x10\x00\x12\x0b\n\x07LEVEL_2\x10\x01\x12\x08\n\x04HK10\x10\x02\x12\x08\n\x04HKA1\x10\x03\x12\x08\n\x04HKD1\x10\x04\x12\t\n\x05SHHK1\x10\x05\x12\t\n\x05SHHK5\x10\x06\x12\t\n\x05SZHK1\x10\x07\x12\t\n\x05SZHK5\x10\x08\x42%\n\x16\x63om.chi.ssetest.protosB\x0bSetupConfigb\x06proto3')
)

_SDKPERMISSIONS = _descriptor.EnumDescriptor(
  name='SDKPermissions',
  full_name='stock_testing.SDKPermissions',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LEVEL_1', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEVEL_2', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HK10', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HKA1', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HKD1', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SHHK1', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SHHK5', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SZHK1', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SZHK5', index=8, number=8,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=465,
  serialized_end=581,
)
_sym_db.RegisterEnumDescriptor(_SDKPERMISSIONS)

SDKPermissions = enum_type_wrapper.EnumTypeWrapper(_SDKPERMISSIONS)
LEVEL_1 = 0
LEVEL_2 = 1
HK10 = 2
HKA1 = 3
HKD1 = 4
SHHK1 = 5
SHHK5 = 6
SZHK1 = 7
SZHK5 = 8



_SDKCONFIG = _descriptor.Descriptor(
  name='SDKConfig',
  full_name='stock_testing.SDKConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='appKey', full_name='stock_testing.SDKConfig.appKey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sdkLevel', full_name='stock_testing.SDKConfig.sdkLevel', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sdkSseLevel', full_name='stock_testing.SDKConfig.sdkSseLevel', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hkPerms', full_name='stock_testing.SDKConfig.hkPerms', index=3,
      number=4, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=208,
)


_TESTCASECONFIG = _descriptor.Descriptor(
  name='TestcaseConfig',
  full_name='stock_testing.TestcaseConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='testcaseID', full_name='stock_testing.TestcaseConfig.testcaseID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='executionTimes', full_name='stock_testing.TestcaseConfig.executionTimes', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='continueWhenFailed', full_name='stock_testing.TestcaseConfig.continueWhenFailed', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='paramStr', full_name='stock_testing.TestcaseConfig.paramStr', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=316,
)


_RUNNERCONFIG = _descriptor.Descriptor(
  name='RunnerConfig',
  full_name='stock_testing.RunnerConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='jobID', full_name='stock_testing.RunnerConfig.jobID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='runnerID', full_name='stock_testing.RunnerConfig.runnerID', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sdkConfig', full_name='stock_testing.RunnerConfig.sdkConfig', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='casesConfig', full_name='stock_testing.RunnerConfig.casesConfig', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=319,
  serialized_end=463,
)

_SDKCONFIG.fields_by_name['sdkLevel'].enum_type = _SDKPERMISSIONS
_SDKCONFIG.fields_by_name['sdkSseLevel'].enum_type = _SDKPERMISSIONS
_SDKCONFIG.fields_by_name['hkPerms'].enum_type = _SDKPERMISSIONS
_RUNNERCONFIG.fields_by_name['sdkConfig'].message_type = _SDKCONFIG
_RUNNERCONFIG.fields_by_name['casesConfig'].message_type = _TESTCASECONFIG
DESCRIPTOR.message_types_by_name['SDKConfig'] = _SDKCONFIG
DESCRIPTOR.message_types_by_name['TestcaseConfig'] = _TESTCASECONFIG
DESCRIPTOR.message_types_by_name['RunnerConfig'] = _RUNNERCONFIG
DESCRIPTOR.enum_types_by_name['SDKPermissions'] = _SDKPERMISSIONS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SDKConfig = _reflection.GeneratedProtocolMessageType('SDKConfig', (_message.Message,), dict(
  DESCRIPTOR = _SDKCONFIG,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:stock_testing.SDKConfig)
  ))
_sym_db.RegisterMessage(SDKConfig)

TestcaseConfig = _reflection.GeneratedProtocolMessageType('TestcaseConfig', (_message.Message,), dict(
  DESCRIPTOR = _TESTCASECONFIG,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:stock_testing.TestcaseConfig)
  ))
_sym_db.RegisterMessage(TestcaseConfig)

RunnerConfig = _reflection.GeneratedProtocolMessageType('RunnerConfig', (_message.Message,), dict(
  DESCRIPTOR = _RUNNERCONFIG,
  __module__ = 'config_pb2'
  # @@protoc_insertion_point(class_scope:stock_testing.RunnerConfig)
  ))
_sym_db.RegisterMessage(RunnerConfig)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
